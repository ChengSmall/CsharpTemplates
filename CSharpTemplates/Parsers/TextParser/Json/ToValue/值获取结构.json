{
  /*
  值获取结构是json标准下的一种通用可扩展值获取结构
  可灵活配置要获取的值
  值获取结构在遵从json语法的前提下，采用不同类型json语句动态搭配
  每一个值获取结构皆可以嵌套
  若格式有错误，则获取的值不做定义，但是必须要有一个值
  组合结构可以自定义type值以扩展功能，但是已有的type值不可做改动
  获取的值可以是整数也可以是小数
  */
  "纯数字": 12345,
  "纯数字2": 3.1415, //使用整数或小数表示一个固定的数字
  "组合结构": {
    //使用 {} 对象的组合结构，可动态获取一些值，每个组合结构都有一个type参数指定值获取类型
    "type": "fixed",
    "value": 123
    //这个结构里value参数是纯数字，和直接写纯数字的效果一致
  },
  "随机值": {
    //随机获取区间在 [min,max] 的数字，需要保证 min 比 max 小，且都是整数
    //如果min 或 max不是整数，或min比max大或等于max，则返回值不做定义
    "type": "random",
    "min": "值获取结构",
    "max": "值获取结构"
  },
  "算数运算": {
    "type": "arith",
    "x": "值获取结构",
    "y": "值获取结构",
    "arith": "add"
    //进行 x 和 y 的算数运算，arith参数决定运算类型
    /*
    arith如下：
    add => 表示 x + y
    sub => 表示 x - y
    mult => 表示乘法 x * y
    div => 表示除法 x / y；如果y是0则返回值不做定义
    mod => 计算 x / y 的余数
    sqrt => 计算 x 的平方，忽略y参数，此时也可以不写y参数
    pow => 计算 x 的 y 次方
    */
  },
  "伯努利随机试验概率获取": {
    "type": "bernoulli",
    "n": "值获取结构",
    "p": "值获取结构"
    //一个伯努利试验的概率结果
    /*
    n表示此次试验的次数，表示为正整数；p表示每次试验的概率，范围在[0,1]，返回的结果是一次试验的总概率，范围在[0,1]
    如果n小于0，或者p范围在[0,1]之外则不做返回值定义
    如果n是小数，则先舍去小数点取整数
    */
  }

}